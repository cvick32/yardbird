/*
 * baml-cli serve
 *
 * baml-cli serve
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct VerificationContext {
    #[serde(rename = "array_operations")]
    pub array_operations: Vec<String>,
    #[serde(rename = "hints")]
    pub hints: Vec<String>,
    #[serde(rename = "init_conditions")]
    pub init_conditions: String,
    #[serde(rename = "loop_bounds")]
    pub loop_bounds: Vec<String>,
    #[serde(rename = "property")]
    pub property: String,
    #[serde(rename = "trans_conditions")]
    pub trans_conditions: String,
    #[serde(rename = "variables")]
    pub variables: Vec<String>,
}

impl VerificationContext {
    pub fn new(
        array_operations: Vec<String>,
        hints: Vec<String>,
        init_conditions: String,
        loop_bounds: Vec<String>,
        property: String,
        trans_conditions: String,
        variables: Vec<String>,
    ) -> VerificationContext {
        VerificationContext {
            array_operations,
            hints,
            init_conditions,
            loop_bounds,
            property,
            trans_conditions,
            variables,
        }
    }
}
