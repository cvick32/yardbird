/*
 * baml-cli serve
 *
 * baml-cli serve
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AnalysisType {
    #[serde(rename = "PROPOSE_INVARIANT")]
    ProposeInvariant,
    #[serde(rename = "ANALYZE_COUNTEREXAMPLE")]
    AnalyzeCounterexample,
    #[serde(rename = "SUGGEST_LEMMAS")]
    SuggestLemmas,
    #[serde(rename = "DEBUG_STRATEGY")]
    DebugStrategy,
}

impl std::fmt::Display for AnalysisType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::ProposeInvariant => write!(f, "PROPOSE_INVARIANT"),
            Self::AnalyzeCounterexample => write!(f, "ANALYZE_COUNTEREXAMPLE"),
            Self::SuggestLemmas => write!(f, "SUGGEST_LEMMAS"),
            Self::DebugStrategy => write!(f, "DEBUG_STRATEGY"),
        }
    }
}

impl Default for AnalysisType {
    fn default() -> AnalysisType {
        Self::ProposeInvariant
    }
}
